buildscript {
    ext {
        springBootVersion = '2.0.0.RC1'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'com.palantir.git-version' version '0.6.0' apply false
    id "org.sgornostal.docker" version "1.4"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

File git = new File(projectDir, '.git')
if(!git.exists()) {
    version = 'heroku'
    ext.gitHash = 'heroku'
    ext.branchName = 'heroku'
    ext.tag = 'heroku'
} else {
    apply plugin: 'com.palantir.git-version'
    version = gitVersion()
    def details = versionDetails()
    ext.gitHash = details.gitHash
    ext.branchName = details.branchName
    ext.tag = details.lastTag
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    runtime 'org.springframework.boot:spring-boot-devtools'
    compile 'org.apache.httpcomponents:httpasyncclient:4.1.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.boot:spring-boot-starter-quartz'
    compile 'org.springframework.retry:spring-retry'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

processResources {
    expand project.properties
}

bootJar {
    mainClassName = 'org.homonoia.echo.EchoMain'
    baseName = 'echo-bot'
    version = project.version
}

task stage(dependsOn: [clean, build])
stage.mustRunAfter(clean)

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}